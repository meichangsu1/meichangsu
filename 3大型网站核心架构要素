性能：是一个网站的重要指标，从用户浏览器到数据库，都可以进行优化，
      1.在浏览器端，可以通过浏览器缓存、页面压缩、合理布局页面、减少cookie传输等手段改善性能。
      2.还可以使用CDN，将网站静态内容分发至离用户最近的网络服务商机房，使用户通过最短路径获取数据，
      可在网站机房部署反向代理服务器，缓存热点文件，加快请求响应速度，减轻应用服务器器负载压力。
      3.在应用服务器端，可以使用服务器本地缓存和分布式缓存，通过缓存热点文件，加快请求处理过程，减轻数据库负载压力。
      4.可以通过异步操作将用户请求发送到消息队列等待后续任务处理，而当前请求直接返回响应给用户。
      5.在网站有很多高并发请求的情况下，可以使用多台应用服务器组成一个集群共同对外服务，提高整体处理能力。
      6.在代码层面，使用多线程、改善内存管理手段等优化性能
      7.在数据库服务器端，索引、缓存、sql优化等性能优化手段已经比较成熟，方兴未艾的NoSql数据库通过优化收据模型、
      存储结构、伸缩特性等手段在性能方面日趋明显。
      衡量网站性能有一系列指标，重要的有响应时间、TPS（吞吐量：单位时间处理请求的数量）、系统性能计数器，这些指标是网站监控的重要参数，监控这些指标可以
      分析系统瓶颈，预测网站容量。
      
可用性：如何保证高可用，就是冗余，应用部署在多台服务器上同时提供访问，数据存储在多台服务器上相互备份，任何一台服务器宕机都不会影响应用的整体可用，
       也不会导致数据丢失。对于应用服务器而言多台应用服务器通过负载均衡设备组成一个集群共同对外提供服务，任何一服务器宕机，只需把请求切换到其他服务器就
       可以实现高可用。对于存储服务器则对数据进行实时备份。
伸缩性：伸缩性指的是不断向集群加入服务器的手段缓解不断上升的用户并发访问压力和不断增长的数据存储需求。衡量伸缩性的主要标准就是是否可以
       使用多台服务器构建集群，是否容易向集群中添加新的服务器等，加入服务器后是否可以提供和原来的服务器无差别的服务。
       应用服务器集群，只要服务器上不保存数据，所有服务器都是对等的，可以通过合适的负载均衡设备就可以向集群不断加入服务器。
       缓存服务器，需要改进缓存路由算法保证缓存数据的可访问性
       关系数据库：虽然支持主存热备，但是很难做到大规模集群的可伸缩性，因此关系型数据库的集群伸缩性方案必须在数据库之外实现。通过路由分区等手段将部
       署有多个数据库的服务器组成一个集群
       noSQL数据库，天生为海量数据而生，因此对其可伸缩性支持都非常好。
拓展性：如何设计网站架构使其能够快速响应需求变化，是网站可扩展的主要目的，衡量可扩展性的主要标准是网站增加新的业务产品时是否可以实现对现有产品
       透明无影响，不需要任何改动或者很少改动既有业务功能就可以上线新产品，一个产品改动对其他产品无影响。网站可伸缩架构主要手段是事件驱动架构和分布式服务
       事件驱动架构在网站通常利用消息队列实现。
安全性
